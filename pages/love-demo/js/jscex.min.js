/**
 * Created by 15267 on 2017/5/17.
 */
(function () {
  const b = {
    DEBUG: 1, INFO: 2, WARN: 3, ERROR: 4,
  }; const d = function () { this.level = b.WARN; }; d.prototype = {
    log(a) { try { console.log(a); } catch (b) {} }, debug(a) { this.level <= b.DEBUG && this.log(a); }, info(a) { this.level <= b.INFO && this.log(a); }, warn(a) { this.level <= b.WARN && this.log(a); }, error(a) { this.level <= b.ERROR && this.log(a); },
  }; const e = function (a) { const b = []; let c; for (c in a)b.push(c); return b; }; const c = function (a) {
    a._forInKeys = e; a.Logging = { Logger: d, Level: b }; a.logger = new d(); a.modules = {}; a.binders = {}; a.builders = {};
  }; const f = typeof define === 'function' && !define.amd; const g = typeof require === 'function' && typeof define === 'function' && define.amd; typeof require === 'function' && typeof module !== 'undefined' && module.exports ? c(module.exports) : f ? define('jscex', (a, b, d) => { c(d.exports); }) : g ? define('jscex', () => { const a = {}; c(a); return a; }) : (typeof Jscex === 'undefined' && (Jscex = {}), c(Jscex));
}());
